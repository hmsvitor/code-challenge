{"ast":null,"code":"var _jsxFileName = \"/var/www/code-challenge/problem-02/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"React forms hook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"test\",\n          ...register(\"example\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            m: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: errors.exampleRequired,\n            id: \"outlined-error\",\n            label: \"Error\",\n            defaultValue: \"Hello World\",\n            ...register(\"exampleRequired2\", {\n              required: true\n            }),\n            helperText: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/code-challenge/problem-02/src/App.js"],"names":["useForm","TextField","FormControl","App","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired","m"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFR,OAAO,EALX;;AAMA,QAAMS,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;AAAA,gCAEE;AAAO,UAAA,YAAY,EAAC,MAApB;AAAA,aAA+BL,QAAQ,CAAC,SAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,sBAAWA,QAAQ,CAAC,iBAAD,EAAoB;AAAES,YAAAA,QAAQ,EAAE;AAAZ,WAApB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBALF,EAOGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAP7B,eAQE,QAAC,WAAD;AAAa,UAAA,SAAS,MAAtB;AAAuB,UAAA,EAAE,EAAE;AAAEC,YAAAA,CAAC,EAAE;AAAL,WAA3B;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAEP,MAAM,CAACM,eADhB;AAEE,YAAA,EAAE,EAAC,gBAFL;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,YAAY,EAAC,aAJf;AAAA,eAKMV,QAAQ,CAAC,kBAAD,EAAqB;AAAES,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CALd;AAME,YAAA,UAAU,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,kBADF,EASGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAT7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAoBE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtCQX,G;UAMHH,O;;;KANGG,G;AAwCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nfunction App() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  return (\n    <div className=\"body\">\n      <div className=\"formWrapper\">\n        <h1 className=\"title\">React forms hook</h1>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* register your input into the hook by invoking the \"register\" function */}\n          <input defaultValue=\"test\" {...register(\"example\")} />\n\n          {/* include validation with required or other standard HTML validation rules */}\n          <input {...register(\"exampleRequired\", { required: true })} />\n          {/* errors will return when field validation fails  */}\n          {errors.exampleRequired && <span>This field is required</span>}\n          <FormControl fullWidth sx={{ m: 1 }}>\n            <TextField\n              error={errors.exampleRequired}\n              id=\"outlined-error\"\n              label=\"Error\"\n              defaultValue=\"Hello World\"\n              {...register(\"exampleRequired2\", { required: true })}\n              helperText=\"Field required\"\n            />\n            {errors.exampleRequired && <span>This field is required</span>}\n          </FormControl>\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}